{"ast":null,"code":"var _jsxFileName = \"/home/kavya/NITK/DBMS_Project/frontend/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginForm.css\";\nimport qs from 'qs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = Object.freeze({\n  username: \"\",\n  password: \"\"\n});\n\nconst LoginForm = () => {\n  _s();\n\n  const [formData, updateFormData] = useState(initialForm); //console.log(formData);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, loginForm] = useState();\n  const [loginMessage, setLoginMessage] = useState();\n  const [user, setUser] = useState();\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const submitResponse = e => {\n    e.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    axios.post(\"http://localhost:8000/api/auth/login/\", qs.stringify(formData), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      formData: qs.stringify(formData)\n    }).then(resp => {\n      if (resp.status === 200) {\n        console.log(\"Logged in\");\n      } else if (resp.status === 401) {\n        console.log(\"Login failed\");\n      }\n\n      setLoginMessage(resp.data.message);\n      setUser(resp.data); // store the user in localStorage\n\n      localStorage.setItem('user', resp.data);\n      console.log(resp.data);\n    });\n  };\n\n  const validateForm = () => {\n    return login != null;\n  };\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    }\n  }, []);\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.username, \" is logged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        name: \"username\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        name: \"password\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitResponse,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"qUzRiCnnunlFWoLjrXYuY1COcU8=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/kavya/NITK/DBMS_Project/frontend/src/components/LoginForm.jsx"],"names":["React","useState","axios","qs","initialForm","Object","freeze","username","password","LoginForm","formData","updateFormData","setUsername","setPassword","login","loginForm","loginMessage","setLoginMessage","user","setUser","handleChange","e","target","name","value","trim","submitResponse","preventDefault","post","stringify","headers","then","resp","status","console","log","data","message","localStorage","setItem","validateForm","useEffect","loggedInUser","getItem","foundUser","JSON","parse"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginForm.css\";\nimport qs from 'qs'\n\nconst initialForm = Object.freeze({\n  username:\"\",\n  password:\"\"\n});\n\nconst LoginForm = () => {\n  const [formData, updateFormData] = useState(initialForm);\n  //console.log(formData);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, loginForm] = useState();\n  const [loginMessage, setLoginMessage] = useState();\n  const [user, setUser] = useState();\n\n  const handleChange = (e) => {\n\n    updateFormData({\n      ...formData, \n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const submitResponse = (e) => {\n    e.preventDefault();\n    const user = {username, password};\n    axios\n      .post(\"http://localhost:8000/api/auth/login/\", qs.stringify(formData), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        formData: qs.stringify(formData),\n      })\n      .then((resp) => {\n        if (resp.status === 200) {\n          console.log(\"Logged in\");\n        }\n        else if (resp.status === 401) {\n          console.log(\"Login failed\");\n        }\n        setLoginMessage(resp.data.message);\n        setUser(resp.data)\n        // store the user in localStorage\n        localStorage.setItem('user', resp.data)\n        console.log(resp.data)\n      });\n  }; \n \n  const validateForm = () => {\n    return login != null;\n  };\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    }\n  }, []);\n\n  if (user) {\n    return <div>{user.username} is logged in</div>;\n  }\n\n  return (\n    <div className=\"LoginForm\">\n      <form>\n        Username: \n        <input\n          value={username} name=\"username\" required onChange={handleChange}\n        ></input> <br/><br/>\n        Password:\n        <input\n          value={password} name=\"password\" required onChange={handleChange}\n        ></input>\n        <br /> <br />\n        <button onClick={submitResponse}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}